using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LINQ
{
    class Program
    {
        static void Main(string[] args)
        {
            //Lamda Expression 
            //var studentWithTCharacters = students.FindAll(s => s.First[0].ToString() == "S");
            //LINQ Lambda way
            //var studentWithTCharacters = students.Where(s => s.First[0].ToString() == "S");
            //LINQ Query way

            var studentWithTCharacters = from s in students
                                            where s.First[0].ToString() == "S"
                                            select s;

            foreach (var student in studentWithTCharacters)
            {
                Console.WriteLine("Student name is {0} {1}", student.First, student.Last);
            }

            var ShortName = students.FindAll(x => x.First.Length >= 7);
            Console.WriteLine("\nStudents with first name length greater than 6 :");
            foreach (var student in ShortName)
            {
                Console.WriteLine("{0} {1}",student.First, student.Last);
            }




            int highestscore = students.Max(x => x.Scores.Sum());
            var TopStudent = students.FindAll(x => x.Scores.Sum() == highestscore);
            var GoodStudent = students.FindAll(x => x.Scores.Sum() > 270);
            foreach (var student in TopStudent)
            {
                Console.WriteLine("\nStudent with highest total score:{0} {1}", student.First, student.Last);
            }
            Console.WriteLine("\nStudent with total score greater than 270:");
            foreach (var student in GoodStudent)
            {
                Console.WriteLine("{0} {1}",student.First,student.Last);
            }


            Console.WriteLine("\nStudents with reversed name:");
            foreach (var student in students)
            {
                String ReveredFirstName = new string(student.First.ToCharArray().Reverse().ToArray());
                String ReveredLastName = new string(student.Last.ToCharArray().Reverse().ToArray());
                Console.WriteLine("{0} {1}", ReveredFirstName, ReveredLastName);
            }


            Console.WriteLine("\nList of students with FirstName and LastName:");
            List<Stud> Stud = students.Select(x => new Stud { FirstName = x.First, LastName = x.Last }).ToList();
            foreach (var stud in Stud)
            {
                Console.WriteLine("{0} {1}",stud.FirstName,stud.LastName);
            }


            var FirstDescending = Stud.OrderByDescending(x => x.FirstName).ToList();
            var LastAscending = Stud.OrderBy(x => x.LastName).ToList();
            Console.WriteLine("\nStudents with First name Descending order:");
            foreach (var a in FirstDescending)
            {
                Console.WriteLine("{0} {1}", a.FirstName, a.LastName);
            }

            Console.WriteLine("\nStudents with Last name Ascending order:");
            foreach (var b in LastAscending)
            {
                Console.WriteLine("{0} {1}", b.FirstName, b.LastName);
            }
            


            Console.ReadKey();
        }

        static List<Student> students = new List<Student>
        {
           new Student {First="Svetlana", Last="Omelchenko", ID=111, Scores= new List<int> {97, 92, 81, 60}},
           new Student {First="Claire", Last="O'Donnell", ID=112, Scores= new List<int> {75, 84, 91, 39}},
           new Student {First="Sven", Last="Mortensen", ID=113, Scores= new List<int> {88, 94, 65, 91}},
           new Student {First="Cesar", Last="Garcia", ID=114, Scores= new List<int> {97, 89, 85, 82}},
           new Student {First="Debra", Last="Garcia", ID=115, Scores= new List<int> {35, 72, 91, 70}},
           new Student {First="Fadi", Last="Fakhouri", ID=116, Scores= new List<int> {99, 86, 90, 94}},
           new Student {First="Hanying", Last="Feng", ID=117, Scores= new List<int> {93, 92, 80, 87}},
           new Student {First="Hugo", Last="Garcia", ID=118, Scores= new List<int> {92, 90, 83, 78}},
           new Student {First="Lance", Last="Tucker", ID=119, Scores= new List<int> {68, 79, 88, 92}},
           new Student {First="Terry", Last="Adams", ID=120, Scores= new List<int> {99, 82, 81, 79}},
           new Student {First="Eugene", Last="Zabokritski", ID=121, Scores= new List<int> {96, 85, 91, 60}},
           new Student {First="Michael", Last="Tucker", ID=122, Scores= new List<int> {94, 92, 91, 91} }
        };

    }

    public class Student
    {
        public string First { get; set; }
        public string Last { get; set; }
        public int ID { get; set; }
        public List<int> Scores;
    }


    public class Stud
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }


    // Create a data source by using a collection initializer.

}
